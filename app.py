# -*- coding: utf-8 -*-
"""app

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18BPcm3deE8kQ2s_AXgmBvVFG2o5N9szp
"""

import numpy as np
from flask import Flask,request,jsonify,render_template
import pickle 
from datetime import datetime,date

from fbprophet import Prophet

app=Flask(__name__)
model_confirm=pickle.load(open('model_confirmed.pkl','rb'))
model_death=pickle.load(open('model_death.pkl','rb'))
model_recovered=pickle.load(open('model_recovered.pkl','rb'))

india_model_confirm=pickle.load(open('india_model_confirmed.pkl','rb'))
india_model_death=pickle.load(open('india_model_death.pkl','rb'))
india_model_recovered=pickle.load(open('india_model_recover.pkl','rb'))

@app.route('/')
def home():
  return render_template('index.html')

@app.route('/predict',methods=['POST'])
def predict():
  dates=request.form.values()
  lst = list(dates)
  dates=datetime.strptime(lst[-1],'%Y-%m-%d').date()
  delta1=dates-date(2020,5,30)
  periods1=delta1.days
  delta3=dates-date(2020,5,30)
  periods3=delta3.days
  #Confirm prediction
  future_confirm = model_confirm.make_future_dataframe(periods=periods1)
  forecast=model_confirm.predict(future_confirm)
  yhat_confirm=forecast['yhat'].iloc[-1]
  yhat_confirm=int(round(yhat_confirm))
  yhat_lower_confirm=forecast['yhat_lower'].iloc[-1]
  yhat_upper_confirm=forecast['yhat_upper'].iloc[-1]
  # Death Prediction
  future_death = model_death.make_future_dataframe(periods=periods1)
  forecast=model_death.predict(future_death)
  yhat_death=forecast['yhat'].iloc[-1]
  yhat_death=int(round(yhat_death))
  yhat_lower_death=forecast['yhat_lower'].iloc[-1]
  yhat_upper_death=forecast['yhat_upper'].iloc[-1]
  #Recovered prediction
  future_recovered = model_recovered.make_future_dataframe(periods=periods1)
  forecast=model_recovered.predict(future_recovered)
  yhat_recovered=forecast['yhat'].iloc[-1]
  yhat_recovered=int(round(yhat_recovered))
  yhat_lower_recovered=forecast['yhat_lower'].iloc[-1]
  yhat_upper_recovered=forecast['yhat_upper'].iloc[-1]
  #Active Prediction
  yhat_active=yhat_confirm -(yhat_death+yhat_recovered)
  #India Confirm prediction
  india_future_confirm = india_model_confirm.make_future_dataframe(periods=periods3)
  forecast=india_model_confirm.predict(india_future_confirm)
  india_yhat_confirm=forecast['yhat'].iloc[-1]
  india_yhat_confirm=int(round(india_yhat_confirm))
  india_yhat_lower_confirm=forecast['yhat_lower'].iloc[-1]
  india_yhat_upper_confirm=forecast['yhat_upper'].iloc[-1]
  #India Death Prediction
  india_future_death = india_model_death.make_future_dataframe(periods=periods3)
  forecast=india_model_death.predict(india_future_death)
  india_yhat_death=forecast['yhat'].iloc[-1]
  india_yhat_death=int(round(india_yhat_death))
  india_yhat_lower_death=forecast['yhat_lower'].iloc[-1]
  india_yhat_upper_death=forecast['yhat_upper'].iloc[-1]
  #India Recovered prediction
  india_future_recovered = india_model_recovered.make_future_dataframe(periods=periods3)
  forecast=india_model_recovered.predict(india_future_recovered)
  india_yhat_recovered=forecast['yhat'].iloc[-1]
  india_yhat_recovered=int(round(yhat_recovered))
  india_yhat_lower_recovered=forecast['yhat_lower'].iloc[-1]
  india_yhat_upper_recovered=forecast['yhat_upper'].iloc[-1]
  #India Active Prediction
  india_yhat_active=india_yhat_confirm -(india_yhat_death+india_yhat_recovered)

  output=[yhat_confirm,yhat_active,yhat_recovered,yhat_death]
  return render_template('index.html',Date=dates,confirm=yhat_confirm,death=yhat_death,recovered=yhat_recovered,active=yhat_active)

if __name__=='__main__':
  app.run(debug=True)

